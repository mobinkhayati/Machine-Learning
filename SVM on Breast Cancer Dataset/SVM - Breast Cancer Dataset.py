# -*- coding: utf-8 -*-
"""SVM.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/151zzCqe1WI9ode5EI7hDsPJL-TLVVzjC
"""

from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.datasets import load_breast_cancer
from sklearn.metrics import confusion_matrix
from sklearn import svm
cancer = load_breast_cancer()

import numpy as np
import sklearn.metrics as met
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns

x = cancer.data [: , :2]
y = cancer.target

X_train, X_test, y_train, y_test = train_test_split(cancer.data, cancer.target, test_size=0.3, random_state=42)

svm_model = SVC(kernel='linear')

svm_model.fit(X_train, y_train)

y_pred = svm_model.predict(X_test)

accuracy = accuracy_score(y_test, y_pred)

print("Accuracy:", accuracy)

cm = confusion_matrix(y_test, y_pred)

num_classes = len(np.unique(y_test))

plt.imshow(cm, interpolation='nearest', cmap=plt.cm.Blues)
plt.title("Confusion Matrix")
plt.colorbar()
tick_marks = np.arange(num_classes)
plt.xticks(tick_marks, range(num_classes))
plt.yticks(tick_marks, range(num_classes))
plt.xlabel("Predicted Label")
plt.ylabel("True Label")

plt.grid(False)
for i in range(num_classes):
    for j in range(num_classes):
        plt.text(j, i, cm[i, j],
                 horizontalalignment="center", color="white" if cm[i,j] > 500 else "black")
plt.show()

wbc_dataset = load_breast_cancer()
X = wbc_dataset.data[:, :2]
y = wbc_dataset.target

svm_model = svm.SVC(kernel='linear', C=1.0).fit(X, y)

plt.scatter(X[:, 0], X[:, 1], c=y, cmap=plt.cm.Paired)
plt.xlabel('Mean Radius')
plt.ylabel('Mean Texture')

xlim = plt.xlim()
ylim = plt.ylim()

xx, yy = np.meshgrid(np.linspace(xlim[0], xlim[1], 500),np.linspace(ylim[0], ylim[1], 500))
Z = svm_model.predict(np.c_[xx.ravel(), yy.ravel()])
Z = Z.reshape(xx.shape)
plt.contour(xx, yy, Z, colors='k', levels=[-1, 0, 1], alpha=0.5,linestyles=['--', '-', '--'])

plt.show()