# -*- coding: utf-8 -*-
"""Logistic Regression - Iris Dataset.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OE61OdCkfYnIwCF-FUn-1nHWeMGVS3lP
"""

from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import confusion_matrix
from sklearn.metrics import accuracy_score
from sklearn.datasets import load_iris
iris = load_iris()

import numpy as np
import sklearn.metrics as met
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns

x = iris.data
y = iris.target

df = pd.DataFrame(x, columns=iris.feature_names)
df ['Species'] = y
df

print(df["Species"].value_counts())
sns.countplot(df)

plt.figure(figsize=(8,4))
sns.heatmap(df.corr(),annot=True,fmt=".0%")
plt.show()

sns.pairplot(df.iloc[:,:],hue='Species')

df.boxplot(by="Species", figsize=(5,5))

xtrain,xtest,ytrain,ytest = train_test_split(x,y,test_size=0.2)

xtrain.shape , xtest.shape

ytrain.shape , ytest.shape

model = LogisticRegression()

model.fit(xtrain,ytrain)

ypred = model.predict(xtest)

cm = confusion_matrix(ytest, ypred)
print(cm)

ax = plt.axes()
df_cm = cm
sns.heatmap(df_cm, annot=True, annot_kws={"size": 10}, fmt='d',cmap="Blues", ax = ax )
ax.set_title('Confusion Matrix')
plt.show()

met.accuracy_score(ytest, ypred)