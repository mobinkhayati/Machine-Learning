# -*- coding: utf-8 -*-
"""SoftMax.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FNM-ltJvlNx4oOlBfBqc0rQDREigGcMy
"""

from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.metrics import confusion_matrix
from sklearn.datasets import load_iris
iris = load_iris()

import numpy as np
import sklearn.metrics as met
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns

x = iris.data
y = iris.target

df = pd.DataFrame(x, columns=iris.feature_names)
df ['Species'] = y
df

xtrain,xtest,ytrain,ytest = train_test_split(x,y,test_size=0.2)

scaler = StandardScaler()
xtrain = scaler.fit_transform(xtrain)
xtest = scaler.transform(xtest)

model = LogisticRegression(multi_class='multinomial', solver='lbfgs', max_iter=1000)

model.fit(xtrain, ytrain)

y_pred = model.predict(xtest)

accuracy = model.score(xtest, ytest)
print (accuracy)

cm = confusion_matrix(ytest, y_pred)
print (cm)

probabilities = model.predict_proba(xtest)
softmax_scores = [np.exp(x)/sum(np.exp(x)) for x in probabilities]
print (softmax_scores)

plt.plot(softmax_scores);